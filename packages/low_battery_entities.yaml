# Motivated by https://github.com/jazzyisj/unavailable-entities-sensor/
# https://github.com/jazzyisj/unavailable-entities-sensor/blob/main/LICENSE

template:
  - sensor:
      - name: 'Low Battery Entities'
        unique_id: low_battery_entities
        icon: "{{ 'mdi:battery-10' if states('sensor.low_battery_entities')|int(0) > 0 else 'mdi:battery-80' }}"
        unit_of_measurement: entities
        state: >
          {% if state_attr('sensor.low_battery_entities','entity_id') != none %}
            {{ state_attr('sensor.low_battery_entities','entity_id')|count }}
          {% endif %}
        attributes:
          entity_id: >
            {% set threshold = 10 %}
            {% set result = namespace(states=[], entities=[]) %}
            {% for state in states | selectattr('attributes.device_class', '==', 'battery') %}
              {% if 0 <= state.state | int(-1) < threshold | int and not state.entity_id in result.entities %}
                {% set result.states = result.states + [state.name ~ ' (' ~ state.state ~ '%)'] %}
                {% set result.entities = result.entities + [state.entity_id] %}
              {% endif %}
            {% endfor %}
            {% for state in states %}
              {% if 'battery_level' in state.attributes %}
                {% if state_attr(state.entity_id, 'battery_level') | int < threshold and not state.state == 'unavailable' and not state.entity_id in result.entities %}
                  {% set result.states = result.states + [state.name ~ ' (' ~ state_attr(state.entity_id, 'battery_level') ~ '%)'] %}
                  {% set result.entities = result.entities + [state.entity_id] %}
                {% endif %}
              {% endif %}
            {% endfor %}
            {{result.entities|list}}

automation:
  - id: low_battery_entities_notification
    alias: 'Low Battery Entities Notification'
    description: 'Create persistent notification if there are low battery entities, dismiss if none.'
    mode: restart
    trigger:
      - platform: state
        entity_id: sensor.low_battery_entities
        to: ~
    condition:
      - condition: template
        value_template: >
          {{ is_number(trigger.from_state.state)
              and is_number(trigger.to_state.state) }}
    action:
      - choose:
          conditions:
            - condition: numeric_state
              entity_id: sensor.low_battery_entities
              below: 1
          sequence:
            - service: persistent_notification.dismiss
              data:
                notification_id: low_battery_entities
        default:
          - service: persistent_notification.create
            data:
              title: 'Low Battery Entities'
              message: >
                - {{ expand(state_attr('sensor.low_battery_entities','entity_id'))
                      |map(attribute='entity_id')|join('\n- ') }}
              notification_id: low_battery_entities

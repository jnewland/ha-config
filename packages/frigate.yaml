
automation:
  - alias: Notify about camera failures
    id: c39da746-6928-4ff9-9fe0-0c09e5e67fae
    mode: parallel
    trigger:
      - platform: numeric_state
        entity_id:
          - sensor.ac_camera_fps
          - sensor.atrium_camera_fps
          - sensor.back_porch_camera_fps
          - sensor.front_door_camera_fps
          - sensor.front_yard_left_camera_fps
          - sensor.front_yard_right_camera_fps
          - sensor.garage_camera_fps
          - sensor.gate_camera_fps
          - sensor.crate_camera_fps
          - sensor.pergola_camera_fps
        below: 1
        for:
          minutes: 2
    action:
      - service: persistent_notification.create
        data:
          message: >
            {{ trigger.to_state.name }} too low for {{ trigger.for }}!
          notification_id: >
            {{ trigger.entity_id }}_low
  - alias: Dismiss camera failure notifications
    id: b9c16063-bd35-4c1d-834f-6a1cd4bf1892
    mode: parallel
    trigger:
      - platform: numeric_state
        entity_id:
          - sensor.ac_camera_fps
          - sensor.atrium_camera_fps
          - sensor.back_porch_camera_fps
          - sensor.front_door_camera_fps
          - sensor.front_yard_left_camera_fps
          - sensor.front_yard_right_camera_fps
          - sensor.garage_camera_fps
          - sensor.gate_camera_fps
          - sensor.crate_camera_fps
          - sensor.pergola_camera_fps
        below: 6
        above: 4
        for:
          minutes: 2
    action:
      - service: persistent_notification.dismiss
        data:
          notification_id: >
            {{ trigger.entity_id }}_low


  - alias: Notify when person detected in front yard
    # once every 30s
    mode: single
    id: 35b6ace2-2cd3-46a1-9477-c044d11336b5
    trigger:
      platform: mqtt
      topic: frigate/events
      value_template: "{{ value_json['after']['label'] }}"
      payload: person
    condition:
      - "{{ trigger.payload_json['after']['camera'] in ['front_yard_left', 'front_yard_right', 'front_door', 'pergola'] }}"
      - condition: or
        conditions:
          - "{{ trigger.payload_json['type'] == 'new' }}"
          - "{{ trigger.payload_json['before']['entered_zones'] | length == 0 }}"
          - "{{ trigger.payload_json['after']['end_time'] is not none }}"
    action:
      - service: script.ack
        data:
          service: homeassistant.turn_off
          entity_id: automation.notify_when_person_detected_in_front_yard
          camera: >-
            camera.{{ trigger.payload_json['after']['camera'] }}_medium
          camera_thumbnail: >
            {{ states('input_text.external_url') }}/api/frigate/notifications/{{ trigger.payload_json['after']['id'] }}/snapshot.jpg
          message: >-
            {{ trigger.payload_json['after']['label'] }}
            {{ 'event ended' if trigger.payload_json['after']['end_time'] is not none else 'detected' }}
            on {{ trigger.payload_json['after']['camera'] }}.
            long press to view / disable
          tag: >-
            {{ trigger.payload_json['after']['label'] }}-{{ trigger.payload_json['after']['camera'] }}
          confirmation_message: >-
            disabled {{ trigger.payload_json['after']['label'] }} notifications.
          confirmation_tag: >-
            automation.notify_when_person_detected_in_front_yard
          interruption_level: time-sensitive
          clear_tags: >-
            person-front_yard_left,person-front_yard_right,person-front_door,person-pergola
          ack_yes_title: >-
            Disable notifications
      - delay:
          seconds: 30


  - alias: Notify when dog detected in yard
    # once every 30s
    mode: single
    id: 86b77bcd-d3c2-4000-8b5a-4e5c97489a8b
    trigger:
      platform: mqtt
      topic: frigate/events
      value_template: "{{ value_json['after']['label'] }}"
      payload: dog
    condition:
      - "{{ trigger.payload_json['after']['camera'] in ['front_yard_left', 'front_yard_right', 'front_door', 'pergola', 'gate', 'atrium', 'ac', 'back_porch'] }}"
      - condition: or
        conditions:
          - "{{ trigger.payload_json['type'] == 'new' }}"
          - "{{ trigger.payload_json['before']['entered_zones'] | length == 0 }}"
          - "{{ trigger.payload_json['after']['end_time'] is not none }}"
    action:
      - service: script.ack
        data:
          service: homeassistant.turn_off
          entity_id: automation.notify_when_dog_detected_in_yard
          camera: >-
            camera.{{ trigger.payload_json['after']['camera'] }}_medium
          camera_thumbnail: >
            {{ states('input_text.external_url') }}/api/frigate/notifications/{{ trigger.payload_json['after']['id'] }}/snapshot.jpg
          message: >-
            {{ trigger.payload_json['after']['label'] }}
            {{ 'event ended' if trigger.payload_json['after']['end_time'] is not none else 'detected' }}
            on {{ trigger.payload_json['after']['camera'] }}.
            long press to view / disable
          tag: >-
            {{ trigger.payload_json['after']['label'] }}
          confirmation_message: >-
            disabled {{ trigger.payload_json['after']['label'] }} notifications.
          interruption_level: passive
          ack_yes_title: >-
            Disable notifications
          ack_no_title: I need help with the dog
          decline_message: >-
            needs help with the dog.
      - delay:
          seconds: 30

  - alias: Toggle indoor cams
    id: e6589f9c-dd59-41e8-b52b-7c00300ec4c9
    trigger:
      platform: state
      entity_id: alarm_control_panel.alarm
    action:
      - service: >-
          switch.{{ 'turn_on' if trigger.to_state.state in ['armed_home'] else 'turn_off' }}
        data:
          entity_id:
            - switch.garage_detect


  - alias: Toggle person notification automation
    id: 3d11fb82-16e2-4d1d-a0fc-7f418a626e73
    trigger:
      platform: state
      entity_id: alarm_control_panel.alarm
    action:
      - service: >-
          homeassistant.{{ 'turn_on' if trigger.to_state.state in ['armed_home'] else 'turn_off' }}
        data:
          entity_id:
            - automation.notify_when_person_detected_in_front_yard

  - alias: Toggle dog notification automation
    id: 2e1597c7-a06a-4611-9643-2849caafa486
    trigger:
      - platform: state
        entity_id: group.door_locks
      - platform: state
        entity_id: input_select.mode
    action:
      - service: >-
          homeassistant.{{ 'turn_on' if (
              states('input_select.mode') not in ['Away'] and
              trigger.to_state.state in ['unlocked'] )
            else 'turn_off' }}
        data:
          entity_id:
            - automation.notify_when_dog_detected_in_yard

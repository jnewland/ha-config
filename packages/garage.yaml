homeassistant:
  customize:
    binary_sensor.garage_occupancy:
      # Groups with mixed types can't handle brightness data
      trigger_service: script.garage_occupancy
      trigger_entity_id_off: group.garage_occupancy
      media_player_group_member: media_player.move

script:
  garage_occupancy:
    mode: parallel
    sequence:
      - service: homeassistant.turn_on
        entity_id: switch.garage_overhead
      - service: homeassistant.turn_on
        entity_id: media_player.garage
      - service: homeassistant.turn_on
        entity_id: fan.garage

  unlock_garage:
    sequence:
      - service: lock.unlock
        data:
          entity_id: lock.garage

group:
  garage_occupancy:
    entities:
      - switch.garage_overhead
      - media_player.garage
      - fan.garage

binary_sensor:
  - platform: template
    sensors:
      garage_occupancy:
        friendly_name: garage occupied or locked
        device_class: occupancy
        delay_off:
          minutes: 3
        value_template: |
          {{
            is_state('binary_sensor.garage_occupancy_non_lock', 'on') or
            is_state('lock.garage', 'unlocked')
          }}
  - platform: template
    sensors:
      garage_occupancy_non_lock:
        friendly_name: garage occupancy non lock
        device_class: occupancy
        delay_off:
          minutes: 3
        value_template: |
          {{
            is_state('cover.garage', 'open') or
            is_state('light.ratgdo_garage_light', 'on') or
            float(states('sensor.garage_person_count'), default=0) > 0
          }}

automation:
  - alias: Auto lock garage when not occupied
    id: 5f01d890-5bbb-402b-a924-48148773363a
    trigger:
      - id: active_sensor
        platform: state
        entity_id:
          - binary_sensor.garage_occupancy_non_lock
        to: "off"
        for:
          minutes: 5
      - id: passive_sensor
        platform: state
        entity_id:
          - binary_sensor.garage_occupancy_non_lock
        to: "off"
      - id: passive
        platform: state
        entity_id:
          - lock.garage
        to: "unlocked"
      - id: active
        platform: state
        entity_id:
          - lock.garage
        to: "unlocked"
        for:
          minutes: 5

    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: lock.garage
          state: unlocked
        - condition: state
          entity_id: binary_sensor.garage_occupancy_non_lock
          state: "off"
    action:
      - service: system_log.write
        data:
          message: >
            at=script.ack
            tag={{ trigger.entity_id }}
          logger: packages.auto_lock
          level: debug
      - service: script.ack
        data:
          service: lock.lock
          entity_id: lock.garage
          interruption_level: >-
            {{ trigger.id | replace("_sensor", "") }}
          camera: >
            camera.garage_medium
          camera_thumbnail: >-
            {{ states('input_text.external_url') }}
            {{ state_attr('camera.garage_medium', 'entity_picture') }}
          message: >
            Lock the garage?
          confirmation_message: >
            locked the garage.

  - alias: Keep covers closed
    id: 9b4c10ce-0960-4176-9bd5-e670c75dfc0d
    trigger:
      - id: passive
        platform: state
        entity_id:
          - cover.garage
          - cover.gate
        not_to:
          - closed
          - unknown
          - unavailable
      - id: active
        platform: state
        entity_id:
          - cover.garage
          - cover.gate
        not_to:
          - closed
          - unknown
          - unavailable
        for:
          minutes: 5
    action:
      - service: script.ack
        data:
          service: cover.close_cover
          entity_id: >-
            {{ trigger.entity_id }}
          notify_service: >
            {{ "notify.iphones" if trigger.entity_id == "cover.gate" else states('sensor.notify_group') | default("notify.iphones") }}
          interruption_level: >-
            {{ trigger.id if trigger.entity_id != "cover.gate" else "time-sensitive" }}
          camera: >-
            {{ trigger.entity_id | replace("cover.", "camera.") }}_medium
          camera_thumbnail: >-
            {{ states('input_text.external_url') }}
            {{ state_attr(trigger.entity_id | replace("lock.", "camera."), 'entity_picture') }}
          message: >-
            {{ trigger.to_state.name }} is {{ trigger.to_state.state }}. Close it?
          confirmation_message: >-
            closed the {{ trigger.to_state.name }}

  - alias: Cover notification clear
    id: f883428d-555d-495c-865d-63121af76939
    trigger:
      platform: state
      entity_id:
        - cover.garage
        - cover.gate
      to: closed
    action:
      - service: >
          {{ states('sensor.notify_group') | default("notify.iphones") }}
        data:
          message: "clear_notification"
          data:
            tag: "{{ trigger.entity_id }}"

  - alias: Unlock garage door lock with tag
    id: 79bc5e96-faf8-4a56-85d4-2a5537134be0
    trigger:
      platform: event
      event_type: tag_scanned
      event_data:
        tag_id: e847f665-dbaa-4458-9d48-433964d3da29
    condition:
      condition: state
      entity_id: lock.garage
      state: locked
    action:
      - service: lock.unlock
        data:
          entity_id: lock.garage

  - alias: Lock garage door lock with tag
    id: 64664fb7-cc21-4dc9-a05f-399e4e6caec4
    trigger:
      platform: event
      event_type: tag_scanned
      event_data:
        tag_id: e847f665-dbaa-4458-9d48-433964d3da29
    condition:
      condition: state
      entity_id: lock.garage
      state: unlocked
    action:
      - service: lock.lock
        data:
          entity_id: lock.garage

  - alias: garage scene controller button 1
    id: dfacdfd1-d6c2-4f13-9f69-bcf4064e5c0b
    trigger:
      platform: device
      device_id: b41e4056a76e9565ba242d1c7524c7e2
      domain: homekit_controller
      type: button1
      subtype: single_press
    mode: queued
    action:
      - service: script.ack
        data:
          secure: "true"
          tag: garage_button_1
          entity_id: script.unlock_garage
          message: "Unlock garage and disarm?"
          confirmation_message: unlocked the garage.

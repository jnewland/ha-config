name: cd
on:
  pull_request:
    types: [synchronize, opened, reopened]
jobs:
  validate-config:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Generate fake SSL cert
        run: |
          openssl req -x509 -newkey rsa:1024 -subj '/CN=example.com' -nodes -keyout key.pem -out cert.pem
      - name: Test config
        uses: docker://homeassistant/home-assistant:0.116.2@sha256:57e366632585b946b975dc9a80e008b9a561dee8ca1ccc7890cfbcbcd13d439d
        with:
          entrypoint: ./script/cibuild
  deploy:
    runs-on: ubuntu-latest
    needs: validate-config
    steps:
      - uses: maxkomarychev/oction-create-deployment@v0.7.1
        id: create-deployment
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.event.pull_request.head.sha }}
          auto_merge: "true"
          required_contexts: YAMBURGER,validate-config
          production_environment: "true"

      - uses: maxkomarychev/oction-create-deployment-status@v0.7.1
        id: pending
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          deployment_id: ${{ steps.create-deployment.outputs.id }}
          state: pending
          log_url: https://github.com/${{ github.repository }}/commit/${{ github.event.pull_request.head.sha }}/checks

      - name: "Deploy home-assistant"
        env:
          HASS_TOKEN: ${{ secrets.HASS_TOKEN }}
          HASS_URL: ${{ secrets.HASS_URL }}
        run: |
          curl \
            --silent \
            --output /dev/null \
            -H "Authorization: Bearer $HASS_TOKEN" \
            -H "Content-Type: application/json" \
            -d "{\"sha\": \"${{ github.event.pull_request.head.sha }}\"}" \
            "$HASS_URL/api/services/script/deploy"

      - name: "Wait for deployment to complete"
        env:
          HASS_TOKEN: ${{ secrets.HASS_TOKEN }}
          HASS_URL: ${{ secrets.HASS_URL }}
          TIMEOUT: "120"
        run: |
          while true; do
            curl \
              --silent \
              --max-time 5 \
              -H "Authorization: Bearer $HASS_TOKEN" \
              -H "Content-Type: application/json" \
              "$HASS_URL/api/states/sensor.config_sha" | jq -r '.state' | tee /tmp/deployed_sha;
            if [ "$(cat /tmp/deployed_sha)" = "${{ github.event.pull_request.head.sha }}" ]; then
              exit;
            elif [ "$SECONDS" -gt "$TIMEOUT" ]; then
              echo "Couldn't confirm deployment in under $TIMEOUT seconds"
              exit 1;
            else
              sleep 5;
            fi
          done

      - uses: maxkomarychev/oction-create-deployment-status@v0.7.1
        if: success()
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          deployment_id: ${{ steps.create-deployment.outputs.id }}
          state: success
          log_url: https://github.com/${{ github.repository }}/commit/${{ github.event.pull_request.head.sha }}/checks
      - uses: maxkomarychev/oction-create-deployment-status@v0.7.1
        if: failure()
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          deployment_id: ${{ steps.create-deployment.outputs.id }}
          state: failure
          log_url: https://github.com/${{ github.repository }}/commit/${{ github.event.pull_request.head.sha }}/checks

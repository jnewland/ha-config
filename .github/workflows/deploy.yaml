name: cd
on:
  pull_request:
    types: [opened, synchronize, reopened, labeled]
concurrency:
  group: cd-${{ github.event.pull_request.number }}
  cancel-in-progress: true
jobs:
  validate-config:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Generate fake SSL cert
        run: |
          openssl req -x509 -newkey rsa:1024 -subj '/CN=example.com' -nodes -keyout key.pem -out cert.pem
      - name: Test config
        uses: docker://homeassistant/home-assistant:2022.2.9
        with:
          entrypoint: ./script/cibuild
  script-deploy:
    runs-on: ubuntu-latest
    needs: validate-config
    if: |
      ( github.event.action == 'labeled' && github.event.label.name == 'deploy') ||
      ( github.event.action != 'labeled' && contains(github.event.pull_request.labels.*.name, 'deploy') )
    environment: production
    concurrency: production
    steps:
      - name: "Deploy home-assistant"
        env:
          HASS_TOKEN: ${{ secrets.HASS_TOKEN }}
          HASS_URL: ${{ secrets.HASS_URL }}
        run: |
          curl \
            --silent \
            --output /dev/null \
            -H "Authorization: Bearer $HASS_TOKEN" \
            -H "Content-Type: application/json" \
            -d "{\"sha\": \"${{ github.event.pull_request.head.sha }}\"}" \
            "$HASS_URL/api/services/script/deploy"

      - name: "Wait for deployment to complete"
        env:
          HASS_TOKEN: ${{ secrets.HASS_TOKEN }}
          HASS_URL: ${{ secrets.HASS_URL }}
          TIMEOUT: "240"
        run: |
          while true; do
            curl \
              --silent \
              --max-time 5 \
              -H "Authorization: Bearer $HASS_TOKEN" \
              -H "Content-Type: application/json" \
              "$HASS_URL/api/states/sensor.config_sha" | jq -r '.state' | tee /tmp/deployed_sha;
            if [ "$(cat /tmp/deployed_sha)" = "${{ github.event.pull_request.head.sha }}" ]; then
              exit;
            elif [ "$SECONDS" -gt "$TIMEOUT" ]; then
              echo "Couldn't confirm deployment in under $TIMEOUT seconds"
              exit 1;
            else
              sleep 5;
            fi
          done

  create-deploy-status:
    runs-on: ubuntu-latest
    needs: script-deploy
    steps:
      - uses: actions/github-script@v6
        with:
          script: |
            await github.rest.repos.createCommitStatus({
              ...context.repo,
              sha:         context.payload.pull_request.head.sha,
              state:       'success',
              context:     'deploy',
              description: 'PR was deployed with GitHub Actions',
              target_url:  'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
            });
